{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucac\\\\Desktop\\\\Projeto ABCVOLEIBOL\\\\AJUDA VINI\\\\ABCDoVoleibol\\\\src\\\\routes\\\\Equipes\\\\Album.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './dropdownequipes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Album = () => {\n  _s();\n  const [posts, setPosts] = useState({});\n  const [selectedYear, setSelectedYear] = useState(null);\n  useEffect(() => {\n    axios.get('https://shark-app-6myi8.ondigitalocean.app/api/albums?populate=*').then(response => {\n      const {\n        data\n      } = response.data;\n      console.log('Data:', data);\n      const sortedData = data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n      console.log('Sorted Data:', sortedData);\n\n      // Separar as fotos por ano\n      const photosByYear = {};\n      sortedData.forEach(post => {\n        const year = post.attributes.Ano;\n        if (!photosByYear[year]) {\n          photosByYear[year] = [];\n        }\n        photosByYear[year].push(...post.attributes.fotos.data);\n      });\n      setPosts(photosByYear);\n\n      // Obter o ano atual\n      const currentYear = new Date().getFullYear().toString();\n\n      // Definir o último ano ou o ano mais recente como selecionado\n      const lastYear = Object.keys(photosByYear)[0];\n      const mostRecentYear = Object.keys(photosByYear).find(year => year === currentYear) || lastYear;\n      setSelectedYear(mostRecentYear);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const handleYearClick = year => {\n    setSelectedYear(year);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\xC1lbum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      size: \"6\",\n      width: \"100%\",\n      align: \"left\",\n      color: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-list\",\n      children: Object.keys(posts).map(year => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `year-button ${selectedYear === year ? 'selected' : ''}`,\n        onClick: () => handleYearClick(year),\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-grid\",\n      children: selectedYear && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: posts[selectedYear].map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-item\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: photo.attributes.url,\n            alt: \"Imagem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, photo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Album, \"R4XnLgTgU+GJ1R8PmpTQhoNPXTE=\");\n_c = Album;\nexport default Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Album","_s","posts","setPosts","selectedYear","setSelectedYear","get","then","response","data","console","log","sortedData","sort","a","b","Date","createdAt","photosByYear","forEach","post","year","attributes","Ano","push","fotos","currentYear","getFullYear","toString","lastYear","Object","keys","mostRecentYear","find","catch","error","handleYearClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","width","align","color","map","onClick","photo","src","url","alt","id","_c","$RefreshReg$"],"sources":["C:/Users/lucac/Desktop/Projeto ABCVOLEIBOL/AJUDA VINI/ABCDoVoleibol/src/routes/Equipes/Album.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './dropdownequipes.css'\r\nconst Album = () => {\r\n  const [posts, setPosts] = useState({});\r\n  const [selectedYear, setSelectedYear] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://shark-app-6myi8.ondigitalocean.app/api/albums?populate=*')\r\n      .then((response) => {\r\n        const { data } = response.data;\r\n        console.log('Data:', data);\r\n\r\n        const sortedData = data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n        console.log('Sorted Data:', sortedData);\r\n\r\n        // Separar as fotos por ano\r\n        const photosByYear = {};\r\n        sortedData.forEach((post) => {\r\n          const year = post.attributes.Ano;\r\n          if (!photosByYear[year]) {\r\n            photosByYear[year] = [];\r\n          }\r\n          photosByYear[year].push(...post.attributes.fotos.data);\r\n        });\r\n\r\n        setPosts(photosByYear);\r\n\r\n        // Obter o ano atual\r\n        const currentYear = new Date().getFullYear().toString();\r\n\r\n        // Definir o último ano ou o ano mais recente como selecionado\r\n        const lastYear = Object.keys(photosByYear)[0];\r\n        const mostRecentYear = Object.keys(photosByYear).find(year => year === currentYear) || lastYear;\r\n        setSelectedYear(mostRecentYear);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleYearClick = (year) => {\r\n    setSelectedYear(year);\r\n  };\r\n\r\n  return (\r\n    <div className=\"album-container\">\r\n      <h1>Álbum</h1>\r\n      <hr size=\"6\" width=\"100%\" align=\"left\" color=\"black\" />\r\n\r\n      <div className=\"year-list\">\r\n        {Object.keys(posts).map((year) => (\r\n          <button\r\n            key={year}\r\n            className={`year-button ${selectedYear === year ? 'selected' : ''}`}\r\n            onClick={() => handleYearClick(year)}\r\n          >\r\n            {year}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"photo-grid\">\r\n        {selectedYear && (\r\n          <>\r\n            {posts[selectedYear].map((photo) => (\r\n              <div key={photo.id} className=\"photo-item\">\r\n                <img src={photo.attributes.url} alt=\"Imagem\" />\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Album;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}