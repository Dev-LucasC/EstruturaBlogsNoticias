{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucac\\\\Desktop\\\\Projeto ABCVOLEIBOL\\\\AJUDA VINI\\\\ABCDoVoleibol\\\\src\\\\routes\\\\Equipes\\\\Album.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Album = () => {\n  _s();\n\n  const [selectedYear, setSelectedYear] = useState('');\n  const [fotos, setFotos] = useState([]);\n  const anos = ['2016', '2017', '2018', '2023']; // Exemplo de anos disponíveis\n\n  const handleYearSelect = async ano => {\n    setSelectedYear(ano);\n\n    try {\n      const response = await axios.get(`http://localhost:1337/api/albums?populate=*${ano}`); // Rota da API para obter os álbuns do ano selecionado\n\n      const fotosData = response.data.data.map(album => album.attributes.fotos.data); // Obtém a lista de fotos de cada álbum\n\n      const fotosList = fotosData.flat().map(foto => ({\n        id: foto.id,\n        url: foto.attributes.url,\n        title: foto.attributes.name\n      }));\n      const filteredFotosList = fotosList.filter(foto => foto.title.includes(ano)); // Filtra as fotos pelo ano selecionado\n\n      setFotos(filteredFotosList); // Atualiza o estado com as fotos filtradas\n    } catch (error) {\n      console.log('Erro ao buscar as fotos:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Selecione um ano:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedYear,\n        onChange: e => handleYearSelect(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecione...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), anos.map(ano => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: ano,\n          children: ano\n        }, ano, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), selectedYear && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fotos\",\n      children: fotos.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-fotos\",\n        children: \"Nenhuma foto dispon\\xEDvel para o ano selecionado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this) : fotos.map(foto => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"foto\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: foto.url,\n          alt: foto.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, foto.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Album, \"EN/DmKtldnwWB/DEZtVYAEJdXzE=\");\n\n_c = Album;\nexport default Album;\n\nvar _c;\n\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"sources":["C:/Users/lucac/Desktop/Projeto ABCVOLEIBOL/AJUDA VINI/ABCDoVoleibol/src/routes/Equipes/Album.jsx"],"names":["React","useState","axios","Album","selectedYear","setSelectedYear","fotos","setFotos","anos","handleYearSelect","ano","response","get","fotosData","data","map","album","attributes","fotosList","flat","foto","id","url","title","name","filteredFotosList","filter","includes","error","console","log","e","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Album = () => {\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [fotos, setFotos] = useState([]);\r\n\r\n  const anos = ['2016', '2017', '2018', '2023']; // Exemplo de anos disponíveis\r\n\r\n  const handleYearSelect = async (ano) => {\r\n    setSelectedYear(ano);\r\n    try {\r\n      const response = await axios.get(`http://localhost:1337/api/albums?populate=*${ano}`); // Rota da API para obter os álbuns do ano selecionado\r\n      const fotosData = response.data.data.map((album) => album.attributes.fotos.data); // Obtém a lista de fotos de cada álbum\r\n      const fotosList = fotosData.flat().map((foto) => ({\r\n        id: foto.id,\r\n        url: foto.attributes.url,\r\n        title: foto.attributes.name,\r\n      }));\r\n\r\n      const filteredFotosList = fotosList.filter((foto) => foto.title.includes(ano)); // Filtra as fotos pelo ano selecionado\r\n\r\n      setFotos(filteredFotosList); // Atualiza o estado com as fotos filtradas\r\n    } catch (error) {\r\n      console.log('Erro ao buscar as fotos:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"album\">\r\n      <div className=\"year-dropdown\">\r\n        <span>Selecione um ano:</span>\r\n        <select value={selectedYear} onChange={(e) => handleYearSelect(e.target.value)}>\r\n          <option value=\"\">Selecione...</option>\r\n          {anos.map((ano) => (\r\n            <option key={ano} value={ano}>\r\n              {ano}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {selectedYear && (\r\n        <div className=\"fotos\">\r\n          {fotos.length === 0 ? (\r\n            <div className=\"no-fotos\">Nenhuma foto disponível para o ano selecionado.</div>\r\n          ) : (\r\n            fotos.map((foto) => (\r\n              <div key={foto.id} className=\"foto\">\r\n                <img src={foto.url} alt={foto.title} />\r\n           \r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Album;\r\n"]},"metadata":{},"sourceType":"module"}